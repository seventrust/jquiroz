<?php

/**
 * This is the model base class for the table "venta".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Venta".
 *
 * Columns in table "venta" available as properties of the model,
 * followed by relations of table "venta" available as properties of the model.
 *
 * @property integer $NumVenta
 * @property string $CodCliente
 * @property string $CodBodega
 * @property string $Fecha
 * @property string $Vencimiento
 * @property string $ForPago
 * @property string $TotExento
 * @property string $TotDescuento
 * @property string $TotNeto
 * @property string $TotIva
 * @property string $TotImpuesto
 * @property string $TotRetencion
 * @property string $Total
 *
 * @property Detalleventa[] $detalleventas
 */
abstract class BaseVenta extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'venta';
    }

    public static function representingColumn() {
        return 'CodCliente';
    }

    public function rules() {
        return array(
            array('CodCliente, CodBodega, Fecha, Vencimiento, ForPago, TotExento, TotDescuento, TotNeto, TotIva, TotImpuesto, TotRetencion, Total', 'required'),
            array('CodCliente, CodBodega, ForPago, TotExento, TotDescuento, TotNeto, TotIva, TotImpuesto, TotRetencion, Total', 'length', 'max'=>10),
            array('NumVenta, CodCliente, CodBodega, Fecha, Vencimiento, ForPago, TotExento, TotDescuento, TotNeto, TotIva, TotImpuesto, TotRetencion, Total', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'detalleventas' => array(self::HAS_MANY, 'Detalleventa', 'NumVenta'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'NumVenta' => Yii::t('app', 'Num Venta'),
                'CodCliente' => Yii::t('app', 'Cod Cliente'),
                'CodBodega' => Yii::t('app', 'Cod Bodega'),
                'Fecha' => Yii::t('app', 'Fecha'),
                'Vencimiento' => Yii::t('app', 'Vencimiento'),
                'ForPago' => Yii::t('app', 'For Pago'),
                'TotExento' => Yii::t('app', 'Tot Exento'),
                'TotDescuento' => Yii::t('app', 'Tot Descuento'),
                'TotNeto' => Yii::t('app', 'Tot Neto'),
                'TotIva' => Yii::t('app', 'Tot Iva'),
                'TotImpuesto' => Yii::t('app', 'Tot Impuesto'),
                'TotRetencion' => Yii::t('app', 'Tot Retencion'),
                'Total' => Yii::t('app', 'Total'),
                'detalleventas' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('NumVenta', $this->NumVenta);
        $criteria->compare('CodCliente', $this->CodCliente, true);
        $criteria->compare('CodBodega', $this->CodBodega, true);
        $criteria->compare('Fecha', $this->Fecha, true);
        $criteria->compare('Vencimiento', $this->Vencimiento, true);
        $criteria->compare('ForPago', $this->ForPago, true);
        $criteria->compare('TotExento', $this->TotExento, true);
        $criteria->compare('TotDescuento', $this->TotDescuento, true);
        $criteria->compare('TotNeto', $this->TotNeto, true);
        $criteria->compare('TotIva', $this->TotIva, true);
        $criteria->compare('TotImpuesto', $this->TotImpuesto, true);
        $criteria->compare('TotRetencion', $this->TotRetencion, true);
        $criteria->compare('Total', $this->Total, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'ActiveRecordRelation' => array(
                'class' => 'EActiveRecordRelationBehavior',
            ),
        ), parent::behaviors());
    }
}